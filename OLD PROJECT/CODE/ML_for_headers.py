import pandas as pd 
from sklearn.preprocessing import normalize
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestRegressor

def headersPrediction(info):
    dataset = pd.read_csv("/Users/danielforero/Desktop/UNIVERSIDAD/2020-2/ANALISIS FORENSE Y GESTION DE INCIDENTES/PROYECTO/CODE/pe_section_headers_MIN.csv")
    y = dataset["malware"]
    aux = dataset
    del aux["malware"]
    del aux["virtual_address"]
    del aux["hash"]
    x = aux
    x #porcion de la matriz sin columna de malware 
    #aca se intenta normalizar



    X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 2) #entrenamiento
    X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = 0.25, random_state = 2)#validacion 


    sc = StandardScaler()
    X_val = sc.fit_transform(X_val)
    X_val = sc.transform(X_val)



    regressor = RandomForestRegressor(n_estimators = 20, random_state=2)
    regressor.fit(X_val, y_val)
    y_pred = regressor.predict(X_val)
    
    prediction = regressor.predict([info])
    return prediction[0]

